# 避免“画面模糊字幕高清”的情况
 blend-subtitles=video
# 播放器如何使音频和视频同步
 video-sync=audio # 其他的也许帧率太高的屏幕，显卡配置不够
# 音频输出驱动
 ao=pipewire
# 解码时使用的线程数量。线程是否真正支持取决于编码。截至撰写本文时，它只支持一些无损编码。0表示自动检测机器的核心数，并使用该数，最大为16（默认： 1）
 ad-lavc-threads=0
# 视频输出驱动
# dmabuf-wayland 好多功能不能用 如 Anime4K
 vo=gpu-next # dmabuf-wayland,gpu-next,gpu
# 自动在可以使用VRR的地方使用VRR
 drm-vrr-enabled=auto
# 优先使用硬解
 hwdec=auto
 
 keep-open=yes
# 限制保存播放状态的属性列表（示例表示：音频 字幕轨号）
 watch-later-options=aid,sid
# 自动加载所有包含媒体文件名的音频文件
 audio-file-auto=fuzzy
# 自动加载包含媒体文件名的所有字幕
 sub-auto=fuzzy
# 使用一个内置的画质方案预设
 profile=gpu-hq

## 屏幕截图
# 截图的输出路径
 screenshot-directory="~/Pictures/"
# 指定用于保存屏幕截图的文件名模板
 screenshot-template="%F-%p"
# 设置截图的文件类型
 screenshot-format=png #jxl目前还有问题
# 设置JPEG XL的Butteraugli距离。更低意味着更好的质量。无损是 0.0 范围<0-15>
# screenshot-jxl-distance=0.0
# 设置JPEG XL的压缩力度 范围<1-9>
# screenshot-jxl-effort=9

 osc=no

# 禁用内置stats.lua脚本
 # load-stats-overlay=no
 # 始终弹出窗口包括音频
 force-window=yes

# 禁用所有内置快捷键（包括script）
 no-input-default-bindings

# 默认启用 Anime4K Mode A 优化
# glsl-shaders="~~/shaders/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"
